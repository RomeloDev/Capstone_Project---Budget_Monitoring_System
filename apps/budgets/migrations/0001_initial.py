# Generated by Django 5.1.6 on 2025-10-04 08:14

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PRECategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category_type', models.CharField(choices=[('PERSONNEL', 'Personnel Services'), ('MOOE', 'Maintenance and Other Operating Expenses'), ('CAPITAL', 'Capital Outlays')], max_length=20)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'PRE Category',
                'verbose_name_plural': 'PRE Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ApprovedBudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year', models.CharField(max_length=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('supporting_document', models.FileField(help_text='Supporting document for the approved budget', upload_to='approved_budgets/%Y/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'doc', 'xlsx'])])),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Approved Budget',
                'verbose_name_plural': 'Approved Budgets',
                'ordering': ['-fiscal_year'],
                'unique_together': {('fiscal_year',)},
            },
        ),
        migrations.CreateModel(
            name='BudgetAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=255)),
                ('allocated_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('remaining_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('pre_amount_used', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('pr_amount_used', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('ad_amount_used', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('allocated_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('approved_budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='budgets.approvedbudget')),
                ('end_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_allocations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Budget Allocation',
                'verbose_name_plural': 'Budget Allocations',
                'ordering': ['department', 'end_user'],
                'unique_together': {('approved_budget', 'end_user')},
            },
        ),
        migrations.CreateModel(
            name='ActivityDesign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ad_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('department', models.CharField(max_length=255)),
                ('activity_title', models.CharField(max_length=255)),
                ('activity_description', models.TextField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('uploaded_document', models.FileField(help_text='Upload Activity Design document (.docx format)', upload_to='ad_uploads/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['docx', 'doc'])])),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Pending', 'Pending Review'), ('Partially Approved', 'Partially Approved'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Draft', max_length=20)),
                ('partially_approved_pdf', models.FileField(blank=True, null=True, upload_to='ad_pdfs/%Y/%m/')),
                ('final_approved_scan', models.FileField(blank=True, null=True, upload_to='ad_scanned/%Y/%m/')),
                ('is_valid', models.BooleanField(default=False)),
                ('validation_errors', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('partially_approved_at', models.DateTimeField(blank=True, null=True)),
                ('final_approved_at', models.DateTimeField(blank=True, null=True)),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_designs', to=settings.AUTH_USER_MODEL)),
                ('budget_allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_designs', to='budgets.budgetallocation')),
            ],
            options={
                'verbose_name': 'Activity Design',
                'verbose_name_plural': 'Activity Designs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DepartmentPRE',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('department', models.CharField(max_length=255)),
                ('program', models.CharField(default='GASS', max_length=255)),
                ('fund_source', models.CharField(default='STF', max_length=100)),
                ('fiscal_year', models.CharField(max_length=10)),
                ('uploaded_excel_file', models.FileField(blank=True, help_text='Upload PRE Excel file', null=True, upload_to='pre_uploads/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['xlsx', 'xls'])])),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Pending', 'Pending Review'), ('Partially Approved', 'Partially Approved'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Draft', max_length=20)),
                ('is_valid', models.BooleanField(default=False)),
                ('validation_errors', models.JSONField(blank=True, default=dict)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('partially_approved_pdf', models.FileField(blank=True, help_text='PDF generated when partially approved for printing', null=True, upload_to='pre_pdfs/%Y/%m/')),
                ('final_approved_scan', models.FileField(blank=True, help_text='Scanned copy of signed printed PRE', null=True, upload_to='pre_scanned/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('prepared_by_name', models.CharField(blank=True, max_length=255)),
                ('certified_by_name', models.CharField(blank=True, max_length=255)),
                ('approved_by_name', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('partially_approved_at', models.DateTimeField(blank=True, null=True)),
                ('final_approved_at', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Admin notes during review')),
                ('rejection_reason', models.TextField(blank=True)),
                ('budget_allocation', models.ForeignKey(help_text='Must be linked to specific budget allocation', on_delete=django.db.models.deletion.CASCADE, related_name='pres', to='budgets.budgetallocation')),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_pres', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Department PRE',
                'verbose_name_plural': 'Department PREs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PREReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_type', models.CharField(max_length=100)),
                ('q1_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('q2_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('q3_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('q4_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('pre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='budgets.departmentpre')),
            ],
        ),
        migrations.CreateModel(
            name='PRESubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='budgets.precategory')),
            ],
            options={
                'verbose_name': 'PRE Sub-Category',
                'verbose_name_plural': 'PRE Sub-Categories',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('category', 'code')},
            },
        ),
        migrations.CreateModel(
            name='PRELineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255)),
                ('item_code', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('q1_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('q2_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('q3_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('q4_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('is_procurable', models.BooleanField(default=False)),
                ('procurement_method', models.CharField(blank=True, max_length=100)),
                ('remarks', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='budgets.precategory')),
                ('pre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='budgets.departmentpre')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='budgets.presubcategory')),
            ],
            options={
                'ordering': ['category__sort_order', 'subcategory__sort_order', 'item_name'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pr_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('department', models.CharField(max_length=255)),
                ('purpose', models.TextField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('uploaded_document', models.FileField(help_text='Upload Purchase Request document (.docx format)', upload_to='pr_uploads/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['docx', 'doc'])])),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Pending', 'Pending Review'), ('Partially Approved', 'Partially Approved'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Draft', max_length=20)),
                ('partially_approved_pdf', models.FileField(blank=True, null=True, upload_to='pr_pdfs/%Y/%m/')),
                ('final_approved_scan', models.FileField(blank=True, null=True, upload_to='pr_scanned/%Y/%m/')),
                ('is_valid', models.BooleanField(default=False)),
                ('validation_errors', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('partially_approved_at', models.DateTimeField(blank=True, null=True)),
                ('final_approved_at', models.DateTimeField(blank=True, null=True)),
                ('budget_allocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests', to='budgets.budgetallocation')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Purchase Request',
                'verbose_name_plural': 'Purchase Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('content_type', models.CharField(choices=[('pre', 'PRE'), ('pr', 'Purchase Request'), ('ad', 'Activity Design')], max_length=10)),
                ('object_id', models.UUIDField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RequestApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('pre', 'PRE'), ('pr', 'Purchase Request'), ('ad', 'Activity Design')], max_length=10)),
                ('object_id', models.UUIDField()),
                ('approval_level', models.CharField(max_length=50)),
                ('approved_at', models.DateTimeField(auto_now_add=True)),
                ('comments', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-approved_at'],
                'unique_together': {('content_type', 'object_id', 'approved_by', 'approval_level')},
            },
        ),
    ]
